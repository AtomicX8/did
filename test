do local UILibrary = game:GetService("CoreGui").RobloxGui.Modules.Server.ServerPlayer.DefaultServerPlayerModules:FindFirstChild("GraphixUI")
    if UILibrary then 
        UILibrary:Destroy() 
    end 
end
    
-- IMPORTANT
    local GraphixUI = Instance.new("ScreenGui")
    GraphixUI.Name = "GraphixUI"
    GraphixUI.Parent = game:GetService("CoreGui").RobloxGui.Modules.Server.ServerPlayer.DefaultServerPlayerModules
    GraphixUI.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

    local UserInputService = game:GetService("UserInputService")
    local TweenService = game:GetService("TweenService")
    local RunService = game:GetService("RunService")
    local LocalPlayer = game:GetService("Players").LocalPlayer
    local Mouse = LocalPlayer:GetMouse()    

    -- TABLE FOUND
        local function TableFound(table,object)
        for i,v in pairs(table) do
            if v == object then
                return true
            end
        end
            return false
        end

    -- SUPER TABLE FOUND
        local function SuperTableFound(table1,table2)
        for i,v in pairs(table1) do
            for i2,v2 in pairs(table2) do 
                if v == v2 then
                    return true
                end
            end
        end
            return false
        end

    -- MAKE DRAGGABLE
        local function MakeDraggable(topbarobject, object)
        local Dragging = nil
        local DragInput = nil
        local DragStart = nil
        local StartPosition = nil

        local function Update(input)
            local Delta = input.Position - DragStart
            local pos =
                UDim2.new(
                    StartPosition.X.Scale,
                    StartPosition.X.Offset + Delta.X,
                    StartPosition.Y.Scale,
                    StartPosition.Y.Offset + Delta.Y
                )
            local Tween = TweenService:Create(object, TweenInfo.new(0.2), {Position = pos})
            Tween:Play()
        end

        topbarobject.InputBegan:Connect(
            function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                    Dragging = true
                    DragStart = input.Position
                    StartPosition = object.Position

                    input.Changed:Connect(
                        function()
                            if input.UserInputState == Enum.UserInputState.End then
                                Dragging = false
                            end
                        end
                    )
                end
            end
        )

        topbarobject.InputChanged:Connect(
            function(input)
                if
                    input.UserInputType == Enum.UserInputType.MouseMovement or
                    input.UserInputType == Enum.UserInputType.Touch
                then
                    DragInput = input
                end
            end
        )

        UserInputService.InputChanged:Connect(
            function(input)
                if input == DragInput and Dragging then
                    Update(input)
                end
            end
        )
    end

local Create = {} -- Create UI
    function Create:CreateUI()
        -- STATUS UI
            StatusUI = false;
        -- MAIN
            local Main = Instance.new("Frame")
            Main.Name = "Main"
            Main.Parent = GraphixUI
            Main.AnchorPoint = Vector2.new(0.5, 0.5)
            Main.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
            Main.BorderColor3 = Color3.fromRGB(0, 0, 0)
            Main.BorderSizePixel = 0
            Main.Position = UDim2.new(0.5, 0, 0.5, 0)
            Main.Size = UDim2.new(0, 540, 0, 520)

            local UICorner = Instance.new("UICorner")
            UICorner.CornerRadius = UDim.new(0, 12)
            UICorner.Parent = Main

            local UIStroke = Instance.new("UIStroke")
            UIStroke.Name = "UIStroke"
            UIStroke.Parent = Main
            UIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
            UIStroke.LineJoinMode = Enum.LineJoinMode.Round
            UIStroke.Color = Color3.fromRGB(40,40,40)
            UIStroke.Transparency = 0
            UIStroke.Thickness = 1

        -- TAB FRAME
            local Tab_Frame = Instance.new("Frame")
            Tab_Frame.Name = "Tab_Frame"
            Tab_Frame.Parent = Main
            Tab_Frame.BackgroundColor3 = Color3.fromRGB(96, 160, 255)
            Tab_Frame.BackgroundTransparency = 1.000
            Tab_Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
            Tab_Frame.BorderSizePixel = 0
            Tab_Frame.Position = UDim2.new(0, 0, 5.86876503e-08, 0)
            Tab_Frame.Size = UDim2.new(0, 95, 0, 520)

            local Logo_Frame = Instance.new("Frame")
            Logo_Frame.Name = "Logo_Frame"
            Logo_Frame.Parent = Tab_Frame
            Logo_Frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Logo_Frame.BackgroundTransparency = 1.000
            Logo_Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
            Logo_Frame.BorderSizePixel = 0
            Logo_Frame.Size = UDim2.new(0, 95, 0, 95)

            local Image_Logo = Instance.new("ImageLabel")
            Image_Logo.Parent = Logo_Frame
            Image_Logo.AnchorPoint = Vector2.new(0.5, 0.5)
            Image_Logo.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Image_Logo.BackgroundTransparency = 1.000
            Image_Logo.BorderColor3 = Color3.fromRGB(0, 0, 0)
            Image_Logo.BorderSizePixel = 0
            Image_Logo.Position = UDim2.new(0.5, 0, 0.5, 0)
            Image_Logo.Size = UDim2.new(0, 72, 0, 72)
            Image_Logo.Image = "rbxassetid://14970756419"

            local Scrolling_Tab = Instance.new("ScrollingFrame")
            Scrolling_Tab.Name = "Scrolling_Tab"
            Scrolling_Tab.Parent = Tab_Frame
            Scrolling_Tab.Active = true
            Scrolling_Tab.BackgroundColor3 = Color3.fromRGB(134, 255, 69)
            Scrolling_Tab.BackgroundTransparency = 1
            Scrolling_Tab.BorderColor3 = Color3.fromRGB(0, 0, 0)
            Scrolling_Tab.BorderSizePixel = 0
            Scrolling_Tab.Position = UDim2.new(0, 0, 0.1545, 0)
            Scrolling_Tab.Size = UDim2.new(0, 95, 0, 440)
            Scrolling_Tab.BottomImage = ""
            Scrolling_Tab.CanvasSize = UDim2.new(0, 0, 0, 0)
            Scrolling_Tab.MidImage = ""
            Scrolling_Tab.ScrollBarThickness = 4
            Scrolling_Tab.VerticalScrollBarPosition = Enum.VerticalScrollBarPosition.Left

            local UIListLayout = Instance.new("UIListLayout")
            UIListLayout.Parent = Scrolling_Tab
            UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
            UIListLayout.Padding = UDim.new(0, 14)

            local UIPaddingPage = Instance.new("UIPadding")
                UIPaddingPage.Parent = Scrolling_Tab
                UIPaddingPage.PaddingTop = UDim.new(0, 5)
                UIPaddingPage.PaddingLeft = UDim.new(0, 0)

            Scrolling_Tab.UIListLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
                Scrolling_Tab.CanvasSize =  UDim2.new(0,0,0,UIListLayout.AbsoluteContentSize.Y +30)
            end);

        -- FUNCTION JUMP UI ( TAB PAGEMAIN )
            local PageOrders = -1

            local Container_Page = Instance.new("Frame",Main)
            Container_Page.Name = ""
            Container_Page.AnchorPoint = Vector2.new(0.5, 0.5)
            Container_Page.BackgroundColor3 = Color3.fromRGB(25, 25, 255)
            Container_Page.Size = UDim2.new(0, 450, 0, 520)
            Container_Page.BackgroundTransparency = 1
            Container_Page.Position = UDim2.new(0.585, 0, 0.5, 0)
            Container_Page.AnchorPoint = Vector2.new(0.5, 0.5)
            Container_Page.ClipsDescendants = true

            local PageFolder = Instance.new("Folder")
            PageFolder.Parent = Container_Page

            local UIPage = Instance.new('UIPageLayout',PageFolder)
            UIPage.SortOrder = Enum.SortOrder.LayoutOrder
            UIPage.FillDirection = Enum.FillDirection.Vertical
            UIPage.EasingDirection = Enum.EasingDirection.InOut
            UIPage.EasingStyle = Enum.EasingStyle.Circular
            UIPage.Padding = UDim.new(0,0)
            UIPage.TweenTime = 0.5

local Tab = {} -- Create Tab
    function Tab:CreateTab(Icon,Type)
        -- PAGE ORDERS & ICON
            PageOrders = PageOrders + 1
    
            if Icon == nil then
                Icon = 11482711029
            end
        -- PAGETAB FRAME
            local ButtonTab_Frame = Instance.new("Frame")
            ButtonTab_Frame.Name = "ButtonTab_Frame"
            ButtonTab_Frame.Parent = Scrolling_Tab
            ButtonTab_Frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            ButtonTab_Frame.BackgroundTransparency = 1
            ButtonTab_Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
            ButtonTab_Frame.BorderSizePixel = 0
            ButtonTab_Frame.Size = UDim2.new(0, 95, 0, 50)

            local Icon_Frame = Instance.new("Frame")
            Icon_Frame.Name = "Icon_Frame"
            Icon_Frame.Parent = ButtonTab_Frame
            Icon_Frame.AnchorPoint = Vector2.new(0.5, 0.5)
            Icon_Frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30) -- Color3.fromRGB(255, 255, 255)
            Icon_Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
            Icon_Frame.BorderSizePixel = 0
            Icon_Frame.Position = UDim2.new(0.5, 0, 0.5, 0)
            Icon_Frame.Size = UDim2.new(0, 42, 0, 42)
            
            local UICorner = Instance.new("UICorner")
            UICorner.CornerRadius = UDim.new(0, 8)
            UICorner.Parent = Icon_Frame

            local Icon_Button = Instance.new("ImageButton")
            Icon_Button.Name = "Icon_Button"
            Icon_Button.Parent = Icon_Frame
            Icon_Button.AnchorPoint = Vector2.new(0.5, 0.5)
            Icon_Button.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Icon_Button.BackgroundTransparency = 1.000
            Icon_Button.BorderColor3 = Color3.fromRGB(0, 0, 0)
            Icon_Button.BorderSizePixel = 0
            Icon_Button.Position = UDim2.new(0.5, 0, 0.5, 0)
            Icon_Button.Size = UDim2.new(0, 22, 0, 22)
            Icon_Button.AutoButtonColor = false
            Icon_Button.Image = "http://www.roblox.com/asset/?id="..tostring(Icon)
            Icon_Button.ImageColor3 = Color3.fromRGB(255, 255, 255) --  Color3.fromRGB(0, 0, 0)
            Icon_Button.ImageTransparency = 0.70

            local Button_Frame = Instance.new("ImageButton")
            Button_Frame.Name = "Button_Frame"
            Button_Frame.Parent = Icon_Button
            Button_Frame.AnchorPoint = Vector2.new(0.5, 0.5)
            Button_Frame.BackgroundColor3 = Color3.fromRGB(25, 255, 255)
            Button_Frame.BackgroundTransparency = 1
            Button_Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
            Button_Frame.BorderSizePixel = 0
            Button_Frame.Position = UDim2.new(0.5, 0, 0.5, 0)
            Button_Frame.Size = UDim2.new(0, 50, 0, 50)
            Button_Frame.AutoButtonColor = false
            Button_Frame.Image = ""
            Button_Frame.ImageColor3 = Color3.fromRGB(0, 0, 0)

        -- PAGEMAIN
            local PageMain = Instance.new("Frame")
            PageMain.Name = "PageMain"
            PageMain.Parent = PageFolder
            PageMain.AnchorPoint = Vector2.new(0.5, 0.5)
            PageMain.BackgroundColor3 = Color3.fromRGB(115, 40, 55)
            PageMain.BackgroundTransparency = 10
            PageMain.BorderSizePixel = 0
            PageMain.Position = UDim2.new(0.5, 0, 0.5, 0)
            PageMain.Size = UDim2.new(0, 450, 0, 520)
            PageMain.Visible = true
            PageMain.ClipsDescendants = true
            PageMain.LayoutOrder = PageOrders

            local Scrolling_PageMain = Instance.new("ScrollingFrame")
            Scrolling_PageMain.Name = "Scrolling_PageMain"
            Scrolling_PageMain.Parent = PageMain
            Scrolling_PageMain.Active = true
            Scrolling_PageMain.BackgroundColor3 = Color3.fromRGB(82, 255, 218)
            Scrolling_PageMain.BackgroundTransparency = 1
            Scrolling_PageMain.BorderColor3 = Color3.fromRGB(0, 0, 0)
            Scrolling_PageMain.BorderSizePixel = 0
            Scrolling_PageMain.Position = UDim2.new(0, 0, 0, 0)
            Scrolling_PageMain.Size = UDim2.new(0, 450, 0, 520)
            Scrolling_PageMain.BottomImage = ""
            Scrolling_PageMain.CanvasSize = UDim2.new(0, 0, 0, 0)
            Scrolling_PageMain.MidImage = ""
            Scrolling_PageMain.ScrollBarThickness = 4

            local UIPadding = Instance.new("UIPadding")
            UIPadding.Parent = Scrolling_PageMain
            UIPadding.PaddingLeft = UDim.new(0, 5)
            UIPadding.PaddingTop = UDim.new(0, 15)

            local UIListLayout = Instance.new("UIListLayout")
            UIListLayout.Parent = Scrolling_PageMain
            UIListLayout.FillDirection = Enum.FillDirection.Horizontal
            UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
            UIListLayout.Padding = UDim.new(0, 10)

        -- FUNCTION TAB BUTTON
            Button_Frame.MouseButton1Click:connect(function()
                if PageMain.Name == "PageMain" then
                    UIPage:JumpToIndex(PageMain.LayoutOrder)
                end

                    for i ,v in next , Scrolling_Tab:GetChildren() do
                        if v:IsA("Frame") then
                            for o,p in pairs(v:GetChildren()) do
                                TweenService:Create(
                                    p,
                                    TweenInfo.new(0.25, Enum.EasingStyle.Cubic, Enum.EasingDirection.Out),
                                    {BackgroundColor3 = Color3.fromRGB(30, 30, 30)}
                                ):Play()
                                for h,j in pairs(p:GetChildren()) do
                                    if j:IsA("ImageButton") then
                                        TweenService:Create(
                                            j,
                                            TweenInfo.new(0.25, Enum.EasingStyle.Cubic, Enum.EasingDirection.Out),
                                            {ImageColor3 = Color3.fromRGB(255, 255, 255)}
                                        ):Play()
                                        TweenService:Create(
                                            j,
                                            TweenInfo.new(0.25, Enum.EasingStyle.Cubic, Enum.EasingDirection.Out),
                                            {ImageTransparency = 0.70}
                                        ):Play()
                                    end
                                end
                            end
                        end
                        TweenService:Create(
                            Icon_Frame,
                            TweenInfo.new(0.25, Enum.EasingStyle.Cubic, Enum.EasingDirection.Out),
                            {BackgroundColor3 = Color3.fromRGB(255, 255, 255)}
                        ):Play()
                        TweenService:Create(
                            Icon_Button,
                            TweenInfo.new(0.25, Enum.EasingStyle.Cubic, Enum.EasingDirection.Out),
                            {ImageColor3 = Color3.fromRGB(0, 0, 0)}
                        ):Play()
                        TweenService:Create(
                            Icon_Button,
                            TweenInfo.new(0.25, Enum.EasingStyle.Cubic, Enum.EasingDirection.Out),
                            {ImageTransparency = 0}
                        ):Play()
                    end
                end)
            if StatusUI == false then
                TweenService:Create(
                    Icon_Frame,
                    TweenInfo.new(0.25, Enum.EasingStyle.Cubic, Enum.EasingDirection.Out),
                    {BackgroundColor3 = Color3.fromRGB(255, 255, 255)}
                ):Play()
                TweenService:Create(
                    Icon_Button,
                    TweenInfo.new(0.25, Enum.EasingStyle.Cubic, Enum.EasingDirection.Out),
                    {ImageColor3 = Color3.fromRGB(0, 0, 0)}
                ):Play() 
                TweenService:Create(
                    Icon_Button,
                    TweenInfo.new(0.25, Enum.EasingStyle.Cubic, Enum.EasingDirection.Out),
                    {ImageTransparency = 0}
                ):Play()

                PageMain.Visible = true
                Button_Frame.Name = "Server"
                StatusUI  = true
            end
        -- TYPE LINE
            if Type == "On" and "true" then
                local Line_Frame = Instance.new("ImageLabel")
                Line_Frame.Name = "ButtonTab_Frame"
                Line_Frame.Parent = Scrolling_Tab
                Line_Frame.AnchorPoint = Vector2.new(0.5, 0.5)
                Line_Frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                Line_Frame.BackgroundTransparency = 1
                Line_Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
                Line_Frame.Position = UDim2.new(0.5, 0, 0.5, 0)
                Line_Frame.BorderSizePixel = 0
                Line_Frame.Size = UDim2.new(0, 95, 0, 1)

                local Line = Instance.new("Frame")
                Line.Name = "ButtonTab_Frame"
                Line.Parent = Line_Frame
                Line.AnchorPoint = Vector2.new(0.5, 0.5)
                Line.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
                Line.BackgroundTransparency = 0
                Line.BorderColor3 = Color3.fromRGB(0, 0, 0)
                Line.Position = UDim2.new(0.5, 0, 0.5, 0)
                Line.BorderSizePixel = 0
                Line.Size = UDim2.new(0, 50, 0, 1)
            else
            end

        -- PAGE ( LEFT , RIGHT )
            local Frame_Left = Instance.new("Frame")
            Frame_Left.Name = "Frame_Left"
            Frame_Left.Parent = Scrolling_PageMain
            Frame_Left.BackgroundColor3 = Color3.fromRGB(120, 20, 120)
            Frame_Left.BackgroundTransparency = 1
            Frame_Left.BorderColor3 = Color3.fromRGB(0, 0, 0)
            Frame_Left.BorderSizePixel = 0
            Frame_Left.Size = UDim2.new(0, 210, 0, 490)

            local Frame_Right = Instance.new("Frame")
            Frame_Right.Name = "Frame_Right"
            Frame_Right.Parent = Scrolling_PageMain
            Frame_Right.BackgroundColor3 = Color3.fromRGB(20, 120, 120)
            Frame_Right.BackgroundTransparency = 1
            Frame_Right.BorderColor3 = Color3.fromRGB(0, 0, 0)
            Frame_Right.BorderSizePixel = 0
            Frame_Right.Size = UDim2.new(0, 210, 0, 490)

local Page = {} -- CREATE PAGE
    function Page:CreatePage(text,Type)
        -- GET TYPE ( Left & Right )
            local function GetType(Value)
                if Value == "Left" then
                    return Frame_Left
                elseif Value == "Right" then
                    return Frame_Right
                else
                    return Frame_Left
                end
            end
        -- PAGE 
            local Page = Instance.new("Frame")
            Page.Name = "Page"
            Page.Parent = GetType(Type)
            Page.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
            Page.BackgroundTransparency = 0
            Page.BorderColor3 = Color3.fromRGB(0, 0, 0)
            Page.BorderSizePixel = 0
            Page.Size = UDim2.new(0, 210, 0, 205)

            local UICorner = Instance.new("UICorner")
            UICorner.CornerRadius = UDim.new(0, 5)
            UICorner.Parent = Page

            local UIStroke = Instance.new("UIStroke")
            UIStroke.Name = "UIStroke"
            UIStroke.Parent = Page
            UIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
            UIStroke.LineJoinMode = Enum.LineJoinMode.Round
            UIStroke.Color = Color3.fromRGB(30,30,30)
            UIStroke.Transparency = 0
            UIStroke.Thickness = 1

            local UIListLayout = Instance.new("UIListLayout")
            UIListLayout.Parent = Page
            UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
            UIListLayout.Padding = UDim.new(0, 8)

            local UIPaddingPage = Instance.new("UIPadding")
            UIPaddingPage.Parent = Page
            UIPaddingPage.PaddingLeft = UDim.new(0, 7)
            UIPaddingPage.PaddingTop = UDim.new(0, 7)

            local Page_Frame = Instance.new("Frame")
            Page_Frame.Parent = Page
            Page_Frame.BackgroundColor3 = Color3.fromRGB(30, 50, 100)
            Page_Frame.BackgroundTransparency = 1
            Page_Frame.BorderSizePixel = 0
            Page_Frame.AnchorPoint = Vector2.new(0.5,0.5)
            Page_Frame.Position = UDim2.new(0.5, 0, 0.5, 0)
            Page_Frame.Size = UDim2.new(0, 196, 0, 12)
            Page_Frame.Visible = true
            Page_Frame.ClipsDescendants = false 

            local Text_Page = Instance.new("TextLabel")
            Text_Page.Parent = Page_Frame
            Text_Page.BackgroundColor3 = Color3.fromRGB(10,140,255)
            Text_Page.BackgroundTransparency = 1
            Text_Page.BorderSizePixel = 0
            Text_Page.Size = UDim2.new(0, 196, 0, 12)
            Text_Page.AnchorPoint = Vector2.new(0.5,0.5)
            Text_Page.Position = UDim2.new(0.5, 0, 0.5, 0)
            Text_Page.Font = Enum.Font.GothamBold
            Text_Page.TextColor3 = Color3.fromRGB(255,255,255)
            Text_Page.Text = tostring(text)
            Text_Page.TextSize = 13
            Text_Page.TextXAlignment = Enum.TextXAlignment.Left

            UIListLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
                Page.Size =  UDim2.new(0, 210, 0,UIListLayout.AbsoluteContentSize.Y + 15)
            end);

local System = {} -- SYSTEM FUNCTION ( UI )
    function System:Line() -- LINE SYSTEM
        -- LINE
            local Line_Frame = Instance.new("Frame")
            Line_Frame.Parent = Page
            Line_Frame.BackgroundColor3 = Color3.fromRGB(50, 50, 100)
            Line_Frame.BackgroundTransparency = 1
            Line_Frame.BorderSizePixel = 0
            Line_Frame.AnchorPoint = Vector2.new(0.5,0.5)
            Line_Frame.Position = UDim2.new(0.5, 0, 0.5, 0)
            Line_Frame.Size = UDim2.new(0, 196, 0, 3)
            Line_Frame.Visible = true
            Line_Frame.ClipsDescendants = true 

            local Line = Instance.new("Frame")
            Line.Name = "Line"
            Line.Parent = Line_Frame
            Line.BackgroundColor3 = Color3.fromRGB(45, 45, 45) -- Color3.fromRGB(100, 100, 100)
            Line.BackgroundTransparency = 0
            Line.BorderColor3 = Color3.fromRGB(0, 0, 0)
            Line.BorderSizePixel = 0
            Line.AnchorPoint = Vector2.new(0.5,0.5)
            Line.Position = UDim2.new(0.5, 0, 0.5, 0)
            Line.Size = UDim2.new(0, 196, 0, 1)
        end
    function System:TextLabel(text,Type) -- TEXTLABEL SYSTEM
        -- TEXTLABEL
            local TextLabel_Frame = Instance.new("Frame")
            TextLabel_Frame.Parent = Page
            TextLabel_Frame.BackgroundColor3 = Color3.fromRGB(50, 50, 100)
            TextLabel_Frame.BackgroundTransparency = 1
            TextLabel_Frame.BorderSizePixel = 0
            TextLabel_Frame.AnchorPoint = Vector2.new(0.5,0.5)
            TextLabel_Frame.Position = UDim2.new(0.5, 0, 0.5, 0)
            TextLabel_Frame.Size = UDim2.new(0, 196, 0, 15)
            TextLabel_Frame.Visible = true
            TextLabel_Frame.ClipsDescendants = true 

            local Text = Instance.new("TextLabel")
            Text.Parent = TextLabel_Frame
            Text.BackgroundColor3 = Color3.fromRGB(10,140,255)
            Text.BackgroundTransparency = 1
            Text.BorderSizePixel = 0
            Text.Size = UDim2.new(0, 196, 0, 15)
            Text.AnchorPoint = Vector2.new(0.5,0.5)
            Text.Position = UDim2.new(0.515, 0, 0.5, 0)
            Text.Font = Enum.Font.GothamBold
            Text.TextColor3 = Color3.fromRGB(255,255,255)
            Text.Text = tostring(text)
            Text.TextSize = 12
            Text.TextTransparency = 0
            if Type == "Left" then
                Text.TextXAlignment = Enum.TextXAlignment.Left
            elseif Type == "Center" then
                Text.TextXAlignment = Enum.TextXAlignment.Center
            elseif Type == "Right" then
                Text.TextXAlignment = Enum.TextXAlignment.Right
            else
                Text.TextXAlignment = Enum.TextXAlignment.Center
            end
        end
    function System:Button(text,callback) -- BUTTON SYSTEM
        -- BUTTON
            local Button_Frame = Instance.new("Frame")
            Button_Frame.Parent = Page
            Button_Frame.BackgroundColor3 = Color3.fromRGB(150, 150, 150)
            Button_Frame.BackgroundTransparency = 1
            Button_Frame.BorderSizePixel = 0
            Button_Frame.AnchorPoint = Vector2.new(0.5,0.5)
            Button_Frame.Position = UDim2.new(0.5, 0, 0.5, 0)
            Button_Frame.Size = UDim2.new(0, 196, 0, 22)
            Button_Frame.Visible = true
            Button_Frame.ClipsDescendants = false

            local Text_Button = Instance.new("TextButton")
            Text_Button.Name = "Text_Button"
            Text_Button.Parent = Button_Frame
            Text_Button.AnchorPoint = Vector2.new(0.5, 0.5)
            Text_Button.BackgroundColor3 = Color3.fromRGB(30,30,30)
            Text_Button.BackgroundTransparency = 0
            Text_Button.BorderSizePixel = 0
            Text_Button.Position = UDim2.new(0.5, 0, 0.5, 0)
            Text_Button.Font = Enum.Font.GothamBold
            Text_Button.Text = text
            Text_Button.Size = UDim2.new(0, 194, 0, 22)
            Text_Button.TextTransparency = 0
            Text_Button.TextColor3 = Color3.fromRGB(255,255,255)
            Text_Button.TextXAlignment = Enum.TextXAlignment.Center
            Text_Button.TextSize = 12
            Text_Button.AutoButtonColor = false

            local UICorner = Instance.new("UICorner")
            UICorner.CornerRadius = UDim.new(0, 5)
            UICorner.Parent = Text_Button

            local UIStroke = Instance.new("UIStroke")
            UIStroke.Name = "UIStroke"
            UIStroke.Parent = Text_Button
            UIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
            UIStroke.LineJoinMode = Enum.LineJoinMode.Round
            UIStroke.Color = Color3.fromRGB(35,35,35)
            UIStroke.Transparency = 0
            UIStroke.Thickness = 1

        -- FUNCTION BUTTON
            Text_Button.MouseButton1Click:connect(function()
                TweenService:Create(
                    Text_Button,
                    TweenInfo.new(0.25, Enum.EasingStyle.Cubic, Enum.EasingDirection.Out),
                    {Size = UDim2.new(0, 185, 0, 20)}
                ):Play() wait(0.25)
                TweenService:Create(
                    Text_Button,
                    TweenInfo.new(0.25, Enum.EasingStyle.Cubic, Enum.EasingDirection.Out),
                    {Size = UDim2.new(0, 195, 0, 20)}
                ):Play()
                callback()
            end)
        end
    function System:Toggle(text,System,callback) -- TOGGLE SYSTEM
        -- TOGGLE
            local Toggle_Frame = Instance.new("Frame")
            Toggle_Frame.Parent = Page
            Toggle_Frame.BackgroundColor3 = Color3.fromRGB(10, 150, 150)
            Toggle_Frame.BackgroundTransparency = 1
            Toggle_Frame.BorderSizePixel = 0
            Toggle_Frame.AnchorPoint = Vector2.new(0.5,0.5)
            Toggle_Frame.Position = UDim2.new(0.5, 0, 0.5, 0)
            Toggle_Frame.Size = UDim2.new(0, 196, 0, 20)
            Toggle_Frame.Visible = true
            Toggle_Frame.ClipsDescendants = true

            local Text_Toggle = Instance.new("TextLabel")
            Text_Toggle.Name = "Text_Toggle"
            Text_Toggle.Parent = Toggle_Frame
            Text_Toggle.AnchorPoint = Vector2.new(0.5, 0.5)
            Text_Toggle.BackgroundColor3 = Color3.fromRGB(120, 20, 20)
            Text_Toggle.BackgroundTransparency = 1
            Text_Toggle.BorderSizePixel = 0
            Text_Toggle.Position = UDim2.new(0.575, 0, 0.5, 0)
            Text_Toggle.Font = Enum.Font.GothamBold
            Text_Toggle.Text = text
            Text_Toggle.Size = UDim2.new(0, 170, 0, 20)
            Text_Toggle.TextTransparency = 0
            Text_Toggle.TextColor3 = Color3.fromRGB(255,255,255)
            Text_Toggle.TextXAlignment = Enum.TextXAlignment.Left
            Text_Toggle.TextSize = 12

        -- TOGGLE ( BUTTON )
            local Button_Toggle = Instance.new("TextButton")
            Button_Toggle.Name = "Button_Toggle"
            Button_Toggle.Parent = Toggle_Frame
            Button_Toggle.AnchorPoint = Vector2.new(0.5, 0.5)
            Button_Toggle.BackgroundColor3 = Color3.fromRGB(120, 120, 20)
            Button_Toggle.BackgroundTransparency = 1
            Button_Toggle.BorderSizePixel = 0
            Button_Toggle.Position = UDim2.new(0.5, 0, 0.5, 0)
            Button_Toggle.Font = Enum.Font.GothamBold
            Button_Toggle.Text = ""
            Button_Toggle.Size = UDim2.new(0, 195, 0, 20)
            Button_Toggle.TextTransparency = 0
            Button_Toggle.TextColor3 = Color3.fromRGB(255,255,255)
            Button_Toggle.TextXAlignment = Enum.TextXAlignment.Left
            Button_Toggle.TextSize = 12
            Button_Toggle.AutoButtonColor = false

            local Value_Frame = Instance.new("Frame")
            Value_Frame.Parent = Toggle_Frame
            Value_Frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30) --  Color3.fromRGB(35,35,35)
            Value_Frame.BackgroundTransparency = 0
            Value_Frame.BorderSizePixel = 0
            Value_Frame.AnchorPoint = Vector2.new(0.5,0.5)
            Value_Frame.Position = UDim2.new(0.045, 0, 0.5, 0)
            Value_Frame.Size = UDim2.new(0, 16, 0, 16)

            local UICorner = Instance.new("UICorner")
            UICorner.CornerRadius = UDim.new(0, 3)
            UICorner.Parent = Value_Frame

            local UIStroke = Instance.new("UIStroke")
            UIStroke.Name = "UIStroke"
            UIStroke.Parent = Value_Frame
            UIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
            UIStroke.LineJoinMode = Enum.LineJoinMode.Round
            UIStroke.Color = Color3.fromRGB(35,35,35)
            UIStroke.Transparency = 0
            UIStroke.Thickness = 1

            local Icon_Toggle = Instance.new("ImageLabel")
            Icon_Toggle.Parent = Value_Frame
            Icon_Toggle.BackgroundTransparency = 1.000
            Icon_Toggle.BorderSizePixel = 0
            Icon_Toggle.AnchorPoint = Vector2.new(0.5,0.5)
            Icon_Toggle.Position = UDim2.new(0.5, 0, 0.5, 0)
            Icon_Toggle.Size = UDim2.new(0, 14, 0, 14)
            Icon_Toggle.Image = "http://www.roblox.com/asset/?id=6031094667"
            Icon_Toggle.ImageColor3 = Color3.fromRGB(30,30,30)
            Icon_Toggle.ImageTransparency = 1
            Icon_Toggle.Visible = false

        -- FUNCTION TOGGLE
            local Check = {Toggle = false;}
            Button_Toggle.MouseButton1Down:connect(function()
                if Check.Toggle == false then
                    TweenService:Create(
                        Value_Frame,
                        TweenInfo.new(0.5, Enum.EasingStyle.Cubic, Enum.EasingDirection.Out),
                        {BackgroundColor3 = Color3.fromRGB(255,255,255)}
                    ):Play()

                    Icon_Toggle.ImageTransparency = 0
                elseif Check.Toggle == true then
                    TweenService:Create(
                        Value_Frame,
                        TweenInfo.new(0.5, Enum.EasingStyle.Cubic, Enum.EasingDirection.Out),
                        {BackgroundColor3 = Color3.fromRGB(30, 30, 30)}
                    ):Play()

                    Icon_Toggle.ImageTransparency = 1
                end
                Check.Toggle = not Check.Toggle
                pcall(callback,Check.Toggle)
            end)
        -- FUNCTION SYSTEM
            if System == true then
                TweenService:Create(
                    Value_Frame,
                    TweenInfo.new(0.5, Enum.EasingStyle.Cubic, Enum.EasingDirection.Out),
                    {BackgroundColor3 = Color3.fromRGB(255,255,255)}
                ):Play()
                
                Check.Toggle = not Check.Toggle
                pcall(callback,Check.Toggle)
                end
            end
    function System:Dropdown(text,option,callback)
        -- DROPDOWN FRAME
            local Dropdown_Frame = Instance.new("Frame")
            Dropdown_Frame.Parent = Page
            Dropdown_Frame.BackgroundColor3 = Color3.fromRGB(30,30,30)
            Dropdown_Frame.BackgroundTransparency = 1
            Dropdown_Frame.BorderSizePixel = 0
            Dropdown_Frame.AnchorPoint = Vector2.new(0.5,0.5)
            Dropdown_Frame.Position = UDim2.new(0.5, 0, 0.5, 0)
            Dropdown_Frame.Size = UDim2.new(0, 196, 0, 22)
            Dropdown_Frame.Visible = true
            Dropdown_Frame.ClipsDescendants = false

            local Button_Dropdown = Instance.new("TextButton")
            Button_Dropdown.Name = "Button_Dropdown"
            Button_Dropdown.Parent = Dropdown_Frame
            Button_Dropdown.AnchorPoint = Vector2.new(0.5, 0.5)
            Button_Dropdown.BackgroundColor3 = Color3.fromRGB(30,30,30)
            Button_Dropdown.BackgroundTransparency = 0
            Button_Dropdown.BorderSizePixel = 0
            Button_Dropdown.Position = UDim2.new(0.5, 0, 0.5, 0)
            Button_Dropdown.Font = Enum.Font.GothamBold
            Button_Dropdown.Text = ""
            Button_Dropdown.Size = UDim2.new(0, 194, 0, 22)
            Button_Dropdown.TextTransparency = 0
            Button_Dropdown.TextColor3 = Color3.fromRGB(30,30,30)
            Button_Dropdown.TextXAlignment = Enum.TextXAlignment.Left
            Button_Dropdown.TextSize = 12
            Button_Dropdown.AutoButtonColor = false

            local UICorner = Instance.new("UICorner")
            UICorner.CornerRadius = UDim.new(0, 5)
            UICorner.Parent = Button_Dropdown

            local UIStroke = Instance.new("UIStroke")
            UIStroke.Name = "UIStroke"
            UIStroke.Parent = Button_Dropdown
            UIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
            UIStroke.LineJoinMode = Enum.LineJoinMode.Round
            UIStroke.Color = Color3.fromRGB(35,35,35)
            UIStroke.Transparency = 0
            UIStroke.Thickness = 1

            local Text_Dropdown = Instance.new("TextLabel")
            Text_Dropdown.Name = "Text_Dropdown"
            Text_Dropdown.Parent = Button_Dropdown
            Text_Dropdown.AnchorPoint = Vector2.new(0.5, 0.5)
            Text_Dropdown.BackgroundColor3 = Color3.fromRGB(25,255,255)
            Text_Dropdown.BackgroundTransparency = 1
            Text_Dropdown.BorderSizePixel = 0
            Text_Dropdown.Position = UDim2.new(0.475, 0, 0.5, 0)
            Text_Dropdown.Font = Enum.Font.GothamBold
            Text_Dropdown.Text = text
            Text_Dropdown.Size = UDim2.new(0, 170, 0, 20)
            Text_Dropdown.TextTransparency = 0
            Text_Dropdown.TextColor3 = Color3.fromRGB(255,255,255)
            Text_Dropdown.TextXAlignment = Enum.TextXAlignment.Left
            Text_Dropdown.TextSize = 12

        -- ICON FRAME
            local Icon_Frame = Instance.new("Frame")
            Icon_Frame.Parent = Dropdown_Frame
            Icon_Frame.BackgroundColor3 = Color3.fromRGB(120,20,20)
            Icon_Frame.BackgroundTransparency = 1
            Icon_Frame.BorderSizePixel = 0
            Icon_Frame.AnchorPoint = Vector2.new(0.5,0.5)
            Icon_Frame.Position = UDim2.new(0.925, 0, 0.5, 0)
            Icon_Frame.Size = UDim2.new(0, 20, 0, 20)

            local Icon_Dropdown = Instance.new("ImageLabel")
            Icon_Dropdown.Name = "Icon_Dropdown"
            Icon_Dropdown.Parent = Icon_Frame
            Icon_Dropdown.AnchorPoint = Vector2.new(0.5, 0.5)
            Icon_Dropdown.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Icon_Dropdown.BackgroundTransparency = 1.000
            Icon_Dropdown.BorderColor3 = Color3.fromRGB(0, 0, 0)
            Icon_Dropdown.BorderSizePixel = 0
            Icon_Dropdown.Position = UDim2.new(0.5, 0, 0.5, 0)
            Icon_Dropdown.Size = UDim2.new(0, 20, 0, 20)
            Icon_Dropdown.Image = "rbxassetid://6031091002"
            Icon_Dropdown.ImageColor3 = Color3.fromRGB(255, 255, 255)
            Icon_Dropdown.ImageTransparency = 0

        -- DROP FRAME
            local Drop_Frame = Instance.new("Frame")
            Drop_Frame.Parent = Page
            Drop_Frame.BackgroundColor3 = Color3.fromRGB(30,30,30)
            Drop_Frame.BackgroundTransparency = 0
            Drop_Frame.BorderSizePixel = 0
            Drop_Frame.Position = UDim2.new(0, 0, 1.45, 0)
            Drop_Frame.Size = UDim2.new(0, 195, 0, 0)
            Drop_Frame.Visible = false
            Drop_Frame.ClipsDescendants = true

            local UICorner = Instance.new("UICorner")
            UICorner.CornerRadius = UDim.new(0, 5)
            UICorner.Parent = Drop_Frame

            local UIStroke = Instance.new("UIStroke")
            UIStroke.Name = "UIStroke"
            UIStroke.Parent = Drop_Frame
            UIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
            UIStroke.LineJoinMode = Enum.LineJoinMode.Round
            UIStroke.Color = Color3.fromRGB(35,35,35)
            UIStroke.Transparency = 0
            UIStroke.Thickness = 1

            local Scrolling_DropFrame = Instance.new("ScrollingFrame")
            Scrolling_DropFrame.Name = "Scrolling_DropFrame"
            Scrolling_DropFrame.Parent = Drop_Frame
            Scrolling_DropFrame.Active = true
            Scrolling_DropFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Scrolling_DropFrame.BackgroundTransparency = 1
            Scrolling_DropFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
            Scrolling_DropFrame.BorderSizePixel = 0
            Scrolling_DropFrame.AnchorPoint = Vector2.new(0.5, 0.5)
            Scrolling_DropFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
            Scrolling_DropFrame.Size = UDim2.new(0, 185, 0, 120)
            Scrolling_DropFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
            Scrolling_DropFrame.ScrollBarThickness = 4
            Scrolling_DropFrame.BottomImage = ""
            Scrolling_DropFrame.TopImage = ""
            Scrolling_DropFrame.VerticalScrollBarPosition = Enum.VerticalScrollBarPosition.Right

            local UIListLayout = Instance.new("UIListLayout")
            UIListLayout.Name = "UIListLayout"
            UIListLayout.Parent = Scrolling_DropFrame
            UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
            UIListLayout.Padding = UDim.new(0, 8)

            local UIPaddinglist = Instance.new("UIPadding")
            UIPaddinglist.Name = "UIPaddinglist"
            UIPaddinglist.Parent = Scrolling_DropFrame
            UIPaddinglist.PaddingTop = UDim.new(0, 8)
            UIPaddinglist.PaddingLeft = UDim.new(0, 12)

        -- DROPDOWN VALUE / CHECK
            local Check = {Dropdown = false;} -- DROPDOWN / VALUE
        -- DROPDOWN FUNCTION ( SIZE )
            local Size_Frame = 130
            local Amount = 0
            for i , v in pairs(option) do
                Amount = Amount + 1
                if Amount == 1 then
                    Size_Frame = 130
                elseif Amount == 2 then
                    Size_Frame = 130
                elseif Amount >= 3 then
                    Size_Frame = 130
                end
        -- DROPDOWN FUNCTION ( BUTTON )
        	local List_Frame = Instance.new("Frame")
            List_Frame.Name = "ListFrame"
            List_Frame.Parent = Scrolling_DropFrame
            List_Frame.BackgroundColor3 = Color3.fromRGB(15,15,15)
            List_Frame.BackgroundTransparency = 1
            List_Frame.BorderSizePixel = 0
            List_Frame.AnchorPoint = Vector2.new(0.5, 0.5)
            List_Frame.Position = UDim2.new(0.5, 0, 0.5, 0)
            List_Frame.Size = UDim2.new(0, 160, 0, 20)
                
            local Button_ListFrame = Instance.new("TextButton")
            Button_ListFrame.Name = "Dropdwon_Button"
            Button_ListFrame.Parent = List_Frame
            Button_ListFrame.AnchorPoint = Vector2.new(0.5, 0.5)
            Button_ListFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
            Button_ListFrame.BackgroundTransparency = 0
            Button_ListFrame.BorderSizePixel = 0
            Button_ListFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
            Button_ListFrame.Size = UDim2.new(0, 160, 0, 20)
            Button_ListFrame.Font = Enum.Font.GothamSemibold
            Button_ListFrame.TextColor3 = Color3.fromRGB(255, 255, 255)
            Button_ListFrame.TextSize = 12
            Button_ListFrame.TextXAlignment = Enum.TextXAlignment.Center
            Button_ListFrame.Text = tostring(v)
            Button_ListFrame.AutoButtonColor  = false
            Button_ListFrame.ClipsDescendants = true

            local UICorner = Instance.new("UICorner")
            UICorner.CornerRadius = UDim.new(0, 5)
            UICorner.Name = ""
            UICorner.Parent = Button_ListFrame

            local UIStroke = Instance.new("UIStroke")
            UIStroke.Name = "UIStroke"
            UIStroke.Parent = Button_ListFrame
            UIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
            UIStroke.LineJoinMode = Enum.LineJoinMode.Round
            UIStroke.Color = Color3.fromRGB(35,35,35)
            UIStroke.Transparency = 0
            UIStroke.Thickness = 1
        -- DROPDOWN FUNCTION ( CLICK )
            -- BUTTON LISTFRAME
            Button_ListFrame.MouseButton1Click:connect(function()
                TweenService:Create(
                    Drop_Frame,
                    TweenInfo.new(0.3, Enum.EasingStyle.Linear, Enum.EasingDirection.Out),
                    {Size = UDim2.new(0, 195, 0, 0)}
                ):Play() 
                TweenService:Create(
                    Icon_Dropdown,
                    TweenInfo.new(0.3, Enum.EasingStyle.Linear, Enum.EasingDirection.Out),
                    {Rotation = 0}
                ):Play() wait(0.3)
                Drop_Frame.Visible = false
                Text_Dropdown.Text = tostring(v)
                callback(v)
                Check.Dropdown = not Check.Dropdown
                end)
            end

            -- BUTTON DROPDOWN
            Button_Dropdown.MouseButton1Click:connect(function()
                if Check.Dropdown == false then
                    Drop_Frame.Visible = true
                    TweenService:Create(
                        Drop_Frame,
                        TweenInfo.new(0.3, Enum.EasingStyle.Linear, Enum.EasingDirection.Out),
                        {Size = UDim2.new(0, 195, 0, Size_Frame)}
                    ):Play()
                    TweenService:Create(
                        Icon_Dropdown,
                        TweenInfo.new(0.3, Enum.EasingStyle.Linear, Enum.EasingDirection.Out),
                        {Rotation = -90}
                    ):Play()
                else
                    TweenService:Create(
                        Drop_Frame,
                        TweenInfo.new(0.3, Enum.EasingStyle.Linear, Enum.EasingDirection.Out),
                        {Size = UDim2.new(0, 195, 0, 0)}
                    ):Play() 
                    TweenService:Create(
                        Icon_Dropdown,
                        TweenInfo.new(0.3, Enum.EasingStyle.Linear, Enum.EasingDirection.Out),
                        {Rotation = 0}
                    ):Play() wait(0.25)
                    Drop_Frame.Visible = false
                end
                Check.Dropdown = not Check.Dropdown
            end)

            Scrolling_DropFrame.CanvasSize = UDim2.new(0,0,0,UIListLayout.AbsoluteContentSize.Y + 15 )

        local Dropdown_System = {} -- DROPDOWN SYSTEM
            -- SYSTEM CLEAR
                function Dropdown_System:Add(t) -- DROPDOWN / ADD
                    local List_Frame = Instance.new("Frame")
                    List_Frame.Name = "ListFrame"
                    List_Frame.Parent = Scrolling_DropFrame
                    List_Frame.BackgroundColor3 = Color3.fromRGB(15,15,15)
                    List_Frame.BackgroundTransparency = 1
                    List_Frame.BorderSizePixel = 0
                    List_Frame.AnchorPoint = Vector2.new(0.5, 0.5)
                    List_Frame.Position = UDim2.new(0.5, 0, 0.5, 0)
                    List_Frame.Size = UDim2.new(0, 160, 0, 20)
                        
                    local Button_ListFrame = Instance.new("TextButton")
                    Button_ListFrame.Name = "Dropdwon_Button"
                    Button_ListFrame.Parent = List_Frame
                    Button_ListFrame.AnchorPoint = Vector2.new(0.5, 0.5)
                    Button_ListFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
                    Button_ListFrame.BackgroundTransparency = 0
                    Button_ListFrame.BorderSizePixel = 0
                    Button_ListFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
                    Button_ListFrame.Size = UDim2.new(0, 160, 0, 20)
                    Button_ListFrame.Font = Enum.Font.GothamSemibold
                    Button_ListFrame.TextColor3 = Color3.fromRGB(255, 255, 255)
                    Button_ListFrame.TextSize = 12
                    Button_ListFrame.TextXAlignment = Enum.TextXAlignment.Center
                    Button_ListFrame.Text = tostring(t)
                    Button_ListFrame.AutoButtonColor  = false
                    Button_ListFrame.ClipsDescendants = true

                    local UICorner = Instance.new("UICorner")
                    UICorner.CornerRadius = UDim.new(0, 5)
                    UICorner.Name = ""
                    UICorner.Parent = Button_ListFrame

                    local UIStroke = Instance.new("UIStroke")
                    UIStroke.Name = "UIStroke"
                    UIStroke.Parent = Button_ListFrame
                    UIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
                    UIStroke.LineJoinMode = Enum.LineJoinMode.Round
                    UIStroke.Color = Color3.fromRGB(35,35,35)
                    UIStroke.Transparency = 0
                    UIStroke.Thickness = 1
                -- DROPDOWN FUNCTION ( CLICK )
                    -- BUTTON LISTFRAME
                    Button_ListFrame.MouseButton1Click:connect(function()
                        TweenService:Create(
                            Drop_Frame,
                            TweenInfo.new(0.3, Enum.EasingStyle.Linear, Enum.EasingDirection.Out),
                            {Size = UDim2.new(0, 195, 0, 0)}
                        ):Play() 
                        TweenService:Create(
                            Icon_Dropdown,
                            TweenInfo.new(0.3, Enum.EasingStyle.Linear, Enum.EasingDirection.Out),
                            {Rotation = 0}
                        ):Play() wait(0.3)
                        Drop_Frame.Visible = false
                        Text_Dropdown.Text = tostring(t)
                        callback(t)
                        Check.Dropdown = not Check.Dropdown
                        end)
                        Scrolling_DropFrame.CanvasSize = UDim2.new(0,0,0,UIListLayout.AbsoluteContentSize.Y + 16)
                    end
            -- SYSTEM CLEAR
                function Dropdown_System:Clear() -- DROPDOWN / CLEAR
                    TweenService:Create(
                        Drop_Frame,
                        TweenInfo.new(0.3, Enum.EasingStyle.Linear, Enum.EasingDirection.Out),
                        {Size = UDim2.new(0, 195, 0, 0)}
                    ):Play() 
                    TweenService:Create(
                        Icon_Dropdown,
                        TweenInfo.new(0.3, Enum.EasingStyle.Linear, Enum.EasingDirection.Out),
                        {Rotation = 0}
                    ):Play() wait(0.3)
                    Drop_Frame.Visible = false
                    Text_Dropdown.Text = tostring(text)
                    Check.Dropdown = not Check.Dropdown

                for i, v in next, Scrolling_DropFrame:GetChildren() do
                    if v:IsA("Frame") then
                        v:Destroy()
                        Scrolling_DropFrame.CanvasSize = UDim2.new(0,0,0,UIListLayout.AbsoluteContentSize.Y + 0)
                    end
                end
            end
                return Dropdown_System
            end
    function System:MultiDropdown(text,option,default,callback)
        -- MULTI DROPDOWN / VALUE
            local defaultt = default or {}
            local MultiDropdownTable = {}

        -- MULTI DROPDOWN FRAME
            local Dropdown_Frame = Instance.new("Frame")
            Dropdown_Frame.Parent = Page
            Dropdown_Frame.BackgroundColor3 = Color3.fromRGB(30,30,30)
            Dropdown_Frame.BackgroundTransparency = 1
            Dropdown_Frame.BorderSizePixel = 0
            Dropdown_Frame.AnchorPoint = Vector2.new(0.5,0.5)
            Dropdown_Frame.Position = UDim2.new(0.5, 0, 0.5, 0)
            Dropdown_Frame.Size = UDim2.new(0, 196, 0, 22)
            Dropdown_Frame.Visible = true
            Dropdown_Frame.ClipsDescendants = false

            local Button_Dropdown = Instance.new("TextButton")
            Button_Dropdown.Name = "Button_Dropdown"
            Button_Dropdown.Parent = Dropdown_Frame
            Button_Dropdown.AnchorPoint = Vector2.new(0.5, 0.5)
            Button_Dropdown.BackgroundColor3 = Color3.fromRGB(30,30,30)
            Button_Dropdown.BackgroundTransparency = 0
            Button_Dropdown.BorderSizePixel = 0
            Button_Dropdown.Position = UDim2.new(0.5, 0, 0.5, 0)
            Button_Dropdown.Font = Enum.Font.GothamBold
            Button_Dropdown.Text = ""
            Button_Dropdown.Size = UDim2.new(0, 194, 0, 22)
            Button_Dropdown.TextTransparency = 0
            Button_Dropdown.TextColor3 = Color3.fromRGB(30,30,30)
            Button_Dropdown.TextXAlignment = Enum.TextXAlignment.Left
            Button_Dropdown.TextSize = 12
            Button_Dropdown.AutoButtonColor = false

            local UICorner = Instance.new("UICorner")
            UICorner.CornerRadius = UDim.new(0, 5)
            UICorner.Parent = Button_Dropdown

            local UIStroke = Instance.new("UIStroke")
            UIStroke.Name = "UIStroke"
            UIStroke.Parent = Button_Dropdown
            UIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
            UIStroke.LineJoinMode = Enum.LineJoinMode.Round
            UIStroke.Color = Color3.fromRGB(35,35,35)
            UIStroke.Transparency = 0
            UIStroke.Thickness = 1

            local Text_Dropdown = Instance.new("TextLabel")
            Text_Dropdown.Name = "Text_Dropdown"
            Text_Dropdown.Parent = Button_Dropdown
            Text_Dropdown.AnchorPoint = Vector2.new(0.5, 0.5)
            Text_Dropdown.BackgroundColor3 = Color3.fromRGB(25,255,255)
            Text_Dropdown.BackgroundTransparency = 1
            Text_Dropdown.BorderSizePixel = 0
            Text_Dropdown.Position = UDim2.new(0.475, 0, 0.5, 0)
            Text_Dropdown.Font = Enum.Font.GothamBold
            Text_Dropdown.Text = text
            Text_Dropdown.Size = UDim2.new(0, 170, 0, 20)
            Text_Dropdown.TextTransparency = 0
            Text_Dropdown.TextColor3 = Color3.fromRGB(255,255,255)
            Text_Dropdown.TextXAlignment = Enum.TextXAlignment.Left
            Text_Dropdown.TextSize = 12

        -- ICON FRAME
            local Icon_Frame = Instance.new("Frame")
            Icon_Frame.Parent = Dropdown_Frame
            Icon_Frame.BackgroundColor3 = Color3.fromRGB(120,20,20)
            Icon_Frame.BackgroundTransparency = 1
            Icon_Frame.BorderSizePixel = 0
            Icon_Frame.AnchorPoint = Vector2.new(0.5,0.5)
            Icon_Frame.Position = UDim2.new(0.925, 0, 0.5, 0)
            Icon_Frame.Size = UDim2.new(0, 20, 0, 20)

            local Icon_Dropdown = Instance.new("ImageLabel")
            Icon_Dropdown.Name = "Icon_Dropdown"
            Icon_Dropdown.Parent = Icon_Frame
            Icon_Dropdown.AnchorPoint = Vector2.new(0.5, 0.5)
            Icon_Dropdown.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Icon_Dropdown.BackgroundTransparency = 1.000
            Icon_Dropdown.BorderColor3 = Color3.fromRGB(0, 0, 0)
            Icon_Dropdown.BorderSizePixel = 0
            Icon_Dropdown.Position = UDim2.new(0.5, 0, 0.5, 0)
            Icon_Dropdown.Size = UDim2.new(0, 20, 0, 20)
            Icon_Dropdown.Image = "rbxassetid://6031091002"
            Icon_Dropdown.ImageColor3 = Color3.fromRGB(255, 255, 255)
            Icon_Dropdown.ImageTransparency = 0

        -- MULTI DROP FRAME
            local Drop_Frame = Instance.new("Frame")
            Drop_Frame.Parent = Page
            Drop_Frame.BackgroundColor3 = Color3.fromRGB(30,30,30)
            Drop_Frame.BackgroundTransparency = 0
            Drop_Frame.BorderSizePixel = 0
            Drop_Frame.Position = UDim2.new(0, 0, 1.45, 0)
            Drop_Frame.Size = UDim2.new(0, 195, 0, 0)
            Drop_Frame.Visible = false
            Drop_Frame.ClipsDescendants = true

            local UICorner = Instance.new("UICorner")
            UICorner.CornerRadius = UDim.new(0, 5)
            UICorner.Parent = Drop_Frame

            local UIStroke = Instance.new("UIStroke")
            UIStroke.Name = "UIStroke"
            UIStroke.Parent = Drop_Frame
            UIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
            UIStroke.LineJoinMode = Enum.LineJoinMode.Round
            UIStroke.Color = Color3.fromRGB(35,35,35)
            UIStroke.Transparency = 0
            UIStroke.Thickness = 1

            local Scrolling_DropFrame = Instance.new("ScrollingFrame")
            Scrolling_DropFrame.Name = "Scrolling_DropFrame"
            Scrolling_DropFrame.Parent = Drop_Frame
            Scrolling_DropFrame.Active = true
            Scrolling_DropFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Scrolling_DropFrame.BackgroundTransparency = 1
            Scrolling_DropFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
            Scrolling_DropFrame.BorderSizePixel = 0
            Scrolling_DropFrame.AnchorPoint = Vector2.new(0.5, 0.5)
            Scrolling_DropFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
            Scrolling_DropFrame.Size = UDim2.new(0, 185, 0, 120)
            Scrolling_DropFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
            Scrolling_DropFrame.ScrollBarThickness = 4
            Scrolling_DropFrame.BottomImage = ""
            Scrolling_DropFrame.TopImage = ""
            Scrolling_DropFrame.VerticalScrollBarPosition = Enum.VerticalScrollBarPosition.Right

            local UIListLayout = Instance.new("UIListLayout")
            UIListLayout.Name = "UIListLayout"
            UIListLayout.Parent = Scrolling_DropFrame
            UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
            UIListLayout.Padding = UDim.new(0, 8)

            local UIPaddinglist = Instance.new("UIPadding")
            UIPaddinglist.Name = "UIPaddinglist"
            UIPaddinglist.Parent = Scrolling_DropFrame
            UIPaddinglist.PaddingTop = UDim.new(0, 8)
            UIPaddinglist.PaddingLeft = UDim.new(0, 12)

        -- MULTI DROPDOWN / GETPRO
        	function MultiDefault()
                if default then
                    if table.find(option, default) then
                        pcall(callback, default)
                        return tostring(default)
                    else
                        return tostring(text)
                    end
                else
                    return tostring(text)
                end
            end
            Text_Dropdown.Text = MultiDefault()

        -- MULTI DROPDOWN VALUE / CHECK
            local Check = {Dropdown = false;} -- MULTI DROPDOWN / VALUE
        -- MULTI DROPDOWN FUNCTION ( SIZE )
            local Size_Frame = 130
            local Amount = 0
            for i , v in pairs(option) do
                Amount = Amount + 1
                if Amount == 1 then
                    Size_Frame = 130
                elseif Amount == 2 then
                    Size_Frame = 130
                elseif Amount >= 3 then
                    Size_Frame = 130
                end
        -- MULTI DROPDOWN FUNCTION ( BUTTON )
        	local List_Frame = Instance.new("Frame")
            List_Frame.Name = "ListFrame"
            List_Frame.Parent = Scrolling_DropFrame
            List_Frame.BackgroundColor3 = Color3.fromRGB(15,15,15)
            List_Frame.BackgroundTransparency = 1
            List_Frame.BorderSizePixel = 0
            List_Frame.AnchorPoint = Vector2.new(0.5, 0.5)
            List_Frame.Position = UDim2.new(0.5, 0, 0.5, 0)
            List_Frame.Size = UDim2.new(0, 160, 0, 20)
                
            local Button_ListFrame = Instance.new("TextButton")
            Button_ListFrame.Name = "Dropdwon_Button"
            Button_ListFrame.Parent = List_Frame
            Button_ListFrame.AnchorPoint = Vector2.new(0.5, 0.5)
            Button_ListFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
            Button_ListFrame.BackgroundTransparency = 0
            Button_ListFrame.BorderSizePixel = 0
            Button_ListFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
            Button_ListFrame.Size = UDim2.new(0, 160, 0, 20)
            Button_ListFrame.Font = Enum.Font.GothamSemibold
            Button_ListFrame.TextColor3 = Color3.fromRGB(255, 255, 255)
            Button_ListFrame.TextSize = 12
            Button_ListFrame.TextXAlignment = Enum.TextXAlignment.Center
            Button_ListFrame.Text = tostring(v)
            Button_ListFrame.AutoButtonColor  = false
            Button_ListFrame.ClipsDescendants = true

            local UICorner = Instance.new("UICorner")
            UICorner.CornerRadius = UDim.new(0, 5)
            UICorner.Name = ""
            UICorner.Parent = Button_ListFrame

            local UIStroke = Instance.new("UIStroke")
            UIStroke.Name = "UIStroke"
            UIStroke.Parent = Button_ListFrame
            UIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
            UIStroke.LineJoinMode = Enum.LineJoinMode.Round
            UIStroke.Color = Color3.fromRGB(35,35,35)
            UIStroke.Transparency = 0
            UIStroke.Thickness = 1

        -- MULTI DROPDOWN DROPDOWN TABLEFOUND
            if TableFound(defaultt,v) then 
				Button_ListFrame.BackgroundColor3 = Color3.fromRGB(255,255,255)
                Button_ListFrame.TextColor3 = Color3.fromRGB(30, 30, 30)
                table.insert(MultiDropdownTable,v)
                Text_Dropdown.Text = tostring(table.concat(MultiDropdownTable,","))
            end
        
        -- MULTI DROPDOWN FUNCTION ( CLICK )
            -- BUTTON LISTFRAME
            Button_ListFrame.MouseButton1Click:connect(function()
                if TableFound(MultiDropdownTable,v) == false then 
                    table.insert(MultiDropdownTable,v)
                    table.sort(MultiDropdownTable)
                    Button_ListFrame.BackgroundColor3 = Color3.fromRGB(255,255,255)
                    Button_ListFrame.TextColor3 = Color3.fromRGB(30, 30, 30)
                else 
                    for ine,va in pairs(MultiDropdownTable) do
                        if va == v then
                            table.remove(MultiDropdownTable,ine)

                        end
                    end
                    Button_ListFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
                    Button_ListFrame.TextColor3 = Color3.fromRGB(255,255,255)
                end
                    Text_Dropdown.Text = tostring(table.concat(MultiDropdownTable,","))
                    callback(tostring(table.concat(MultiDropdownTable,",")))
                end)
                Scrolling_DropFrame.CanvasSize = UDim2.new(0,0,0,UIListLayout.AbsoluteContentSize.Y + 15 )
            end

            -- BUTTON MULTI DROPDOWN
            Button_Dropdown.MouseButton1Click:connect(function()
                if Check.Dropdown == false then
                    Drop_Frame.Visible = true
                    TweenService:Create(
                        Drop_Frame,
                        TweenInfo.new(0.3, Enum.EasingStyle.Linear, Enum.EasingDirection.Out),
                        {Size = UDim2.new(0, 195, 0, Size_Frame)}
                    ):Play()
                    TweenService:Create(
                        Icon_Dropdown,
                        TweenInfo.new(0.3, Enum.EasingStyle.Linear, Enum.EasingDirection.Out),
                        {Rotation = -90}
                    ):Play()
                else
                    TweenService:Create(
                        Drop_Frame,
                        TweenInfo.new(0.3, Enum.EasingStyle.Linear, Enum.EasingDirection.Out),
                        {Size = UDim2.new(0, 195, 0, 0)}
                    ):Play() 
                    TweenService:Create(
                        Icon_Dropdown,
                        TweenInfo.new(0.3, Enum.EasingStyle.Linear, Enum.EasingDirection.Out),
                        {Rotation = 0}
                    ):Play() wait(0.25)
                    Drop_Frame.Visible = false
                end
                Check.Dropdown = not Check.Dropdown
            end)

            Scrolling_DropFrame.CanvasSize = UDim2.new(0,0,0,UIListLayout.AbsoluteContentSize.Y + 16 )

        local MuiltDropdown_System = {} -- MULTI DROPDOWN SYSTEM
            -- SYSTEM CLEAR
                function MuiltDropdown_System:Add(t) -- MULTI DROPDOWN / ADD
                    local List_Frame = Instance.new("Frame")
                    List_Frame.Name = "ListFrame"
                    List_Frame.Parent = Scrolling_DropFrame
                    List_Frame.BackgroundColor3 = Color3.fromRGB(15,15,15)
                    List_Frame.BackgroundTransparency = 1
                    List_Frame.BorderSizePixel = 0
                    List_Frame.AnchorPoint = Vector2.new(0.5, 0.5)
                    List_Frame.Position = UDim2.new(0.5, 0, 0.5, 0)
                    List_Frame.Size = UDim2.new(0, 160, 0, 20)
                        
                    local Button_ListFrame = Instance.new("TextButton")
                    Button_ListFrame.Name = "Dropdwon_Button"
                    Button_ListFrame.Parent = List_Frame
                    Button_ListFrame.AnchorPoint = Vector2.new(0.5, 0.5)
                    Button_ListFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
                    Button_ListFrame.BackgroundTransparency = 0
                    Button_ListFrame.BorderSizePixel = 0
                    Button_ListFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
                    Button_ListFrame.Size = UDim2.new(0, 160, 0, 20)
                    Button_ListFrame.Font = Enum.Font.GothamSemibold
                    Button_ListFrame.TextColor3 = Color3.fromRGB(255, 255, 255)
                    Button_ListFrame.TextSize = 12
                    Button_ListFrame.TextXAlignment = Enum.TextXAlignment.Center
                    Button_ListFrame.Text = tostring(t)
                    Button_ListFrame.AutoButtonColor  = false
                    Button_ListFrame.ClipsDescendants = true

                    local UICorner = Instance.new("UICorner")
                    UICorner.CornerRadius = UDim.new(0, 5)
                    UICorner.Name = ""
                    UICorner.Parent = Button_ListFrame

                    local UIStroke = Instance.new("UIStroke")
                    UIStroke.Name = "UIStroke"
                    UIStroke.Parent = Button_ListFrame
                    UIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
                    UIStroke.LineJoinMode = Enum.LineJoinMode.Round
                    UIStroke.Color = Color3.fromRGB(35,35,35)
                    UIStroke.Transparency = 0
                    UIStroke.Thickness = 1
            
            -- MULTI DROPDOWN FUNCTION ( CLICK )
                -- BUTTON LISTFRAME
                Button_ListFrame.MouseButton1Click:connect(function()
                    if TableFound(MultiDropdownTable,t) == false then 
                        table.insert(MultiDropdownTable,t)
                        table.sort(MultiDropdownTable)
                        Button_ListFrame.BackgroundColor3 = Color3.fromRGB(255,255,255)
                        Button_ListFrame.TextColor3 = Color3.fromRGB(30, 30, 30)
                    else 
                        for ine,va in pairs(MultiDropdownTable) do
                            if va == t then
                                table.remove(MultiDropdownTable,ine)
                            end
                        end
                        Button_ListFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
                        Button_ListFrame.TextColor3 = Color3.fromRGB(255,255,255)
                    end  
                        Text_Dropdown.Text = tostring(table.concat(MultiDropdownTable,","))
                        callback(tostring(table.concat(MultiDropdownTable,",")))
                    end)
                    Scrolling_DropFrame.CanvasSize = UDim2.new(0,0,0,UIListLayout.AbsoluteContentSize.Y + 15 )
                end

            -- SYSTEM CLEAR
                function MuiltDropdown_System:Clear() -- MULTI DROPDOWN / CLEAR
                    TweenService:Create(
                        Drop_Frame,
                        TweenInfo.new(0.3, Enum.EasingStyle.Linear, Enum.EasingDirection.Out),
                        {Size = UDim2.new(0, 195, 0, 0)}
                    ):Play() 
                    TweenService:Create(
                        Icon_Dropdown,
                        TweenInfo.new(0.3, Enum.EasingStyle.Linear, Enum.EasingDirection.Out),
                        {Rotation = 0}
                    ):Play() wait(0.3)
                    Drop_Frame.Visible = false
                    Text_Dropdown.Text = tostring(text)
                    Check.Dropdown = not Check.Dropdown
                    MultiDropdownTable = {} -- MULTI DROPDOWN / TABLE
                    for i, v in next, Scrolling_DropFrame:GetChildren() do
                        if v:IsA("Frame") then
                            v:Destroy()
                            Scrolling_DropFrame.CanvasSize = UDim2.new(0,0,0,UIListLayout.AbsoluteContentSize.Y + 0)
                        end
                    end
                end
            -- DEFAULF
                if #defaultt > 0 and SuperTableFound(defaultt,MultiDropdownTable) then
                    callback(tostring(table.concat(MultiDropdownTable,",")))
                end
                    return MuiltDropdown_System
                end
    function System:Slider(text,min,max,value,callback)
        -- SLIDER FRAME
            local Slider_Frame = Instance.new("Frame")
            Slider_Frame.Parent = Page
            Slider_Frame.BackgroundColor3 = Color3.fromRGB(55,150,0)
            Slider_Frame.BackgroundTransparency = 1
            Slider_Frame.BorderSizePixel = 0
            Slider_Frame.AnchorPoint = Vector2.new(0.5,0.5)
            Slider_Frame.Position = UDim2.new(0.5, 0, 0.5, 0)
            Slider_Frame.Size = UDim2.new(0, 196, 0, 34)
            Slider_Frame.Visible = true
            Slider_Frame.ClipsDescendants = false

            local Text_Slider = Instance.new("TextLabel")
            Text_Slider.Name = "Text_Slider"
            Text_Slider.Parent = Slider_Frame
            Text_Slider.AnchorPoint = Vector2.new(0.5, 0.5)
            Text_Slider.BackgroundColor3 = Color3.fromRGB(25,255,255)
            Text_Slider.BackgroundTransparency = 1
            Text_Slider.BorderSizePixel = 0
            Text_Slider.Position = UDim2.new(0.5, 0, 0.15, 0)
            Text_Slider.Font = Enum.Font.GothamBold
            Text_Slider.Text = text
            Text_Slider.Size = UDim2.new(0, 196, 0, 20)
            Text_Slider.TextTransparency = 0
            Text_Slider.TextColor3 = Color3.fromRGB(255,255,255)
            Text_Slider.TextXAlignment = Enum.TextXAlignment.Left
            Text_Slider.TextSize = 12

            local Value_Slider = Instance.new("TextBox")
            Value_Slider.Name = "Value_Slider"
            Value_Slider.Parent = Slider_Frame
            Value_Slider.AnchorPoint = Vector2.new(0.5, 0.5)
            Value_Slider.BackgroundColor3 = Color3.fromRGB(25,255,255)
            Value_Slider.BackgroundTransparency = 1
            Value_Slider.BorderSizePixel = 0
            Value_Slider.Position = UDim2.new(0.5, 0, 0.15, 0)
            Value_Slider.Font = Enum.Font.GothamBold
            Value_Slider.Text = tostring(value and math.floor((value / max) * (max - min) + min) or 0)
            Value_Slider.Size = UDim2.new(0, 196, 0, 20)
            Value_Slider.TextTransparency = 0
            Value_Slider.TextColor3 = Color3.fromRGB(255,255,255)
            Value_Slider.TextXAlignment = Enum.TextXAlignment.Right
            Value_Slider.TextSize = 12

            local Slider_Value_Frame = Instance.new("Frame")
            Slider_Value_Frame.Parent = Slider_Frame
            Slider_Value_Frame.BackgroundColor3 = Color3.fromRGB(30,30,30)
            Slider_Value_Frame.BackgroundTransparency = 0
            Slider_Value_Frame.BorderSizePixel = 0
            Slider_Value_Frame.AnchorPoint = Vector2.new(0.5,0.5)
            Slider_Value_Frame.Position = UDim2.new(0.5, 0, 0.7, 0)
            Slider_Value_Frame.Size = UDim2.new(0, 190, 0, 6)
            Slider_Value_Frame.ClipsDescendants = false

            local UICorner = Instance.new("UICorner")
            UICorner.CornerRadius = UDim.new(0, 5)
            UICorner.Parent = Slider_Value_Frame

            local Slider_Value = Instance.new("Frame")
            Slider_Value.Parent = Slider_Value_Frame
            Slider_Value.BackgroundColor3 = Color3.fromRGB(255,255,255)
            Slider_Value.BackgroundTransparency = Slider_Value
            Slider_Value.BorderSizePixel = 0
            Slider_Value.Position = UDim2.new(0, 0, 0, 0)
            Slider_Value.Size = UDim2.new((value or 0) / max, 0, 0, 6)

            local UICorner = Instance.new("UICorner")
            UICorner.CornerRadius = UDim.new(0, 5)
            UICorner.Parent = Slider_Value

            local Value_Button = Instance.new("Frame")
            Value_Button.Parent = Slider_Value_Frame
            Value_Button.BackgroundColor3 = Color3.fromRGB(255,255,255)
            Value_Button.BackgroundTransparency = 0
            Value_Button.BorderSizePixel = 0
            Value_Button.AnchorPoint = Vector2.new(0.5,0.5)
            Value_Button.Position = UDim2.new((value or 0)/max,0.8,0.5,0,0)
            Value_Button.Size = UDim2.new(0, 12, 0, 12)

            local UICorner = Instance.new("UICorner")
            UICorner.CornerRadius = UDim.new(0, 99)
            UICorner.Parent = Value_Button

            local Slider_System = {}

            local function move(input)
                local pos =
                    UDim2.new(
                        math.clamp((input.Position.X - Slider_Value_Frame.AbsolutePosition.X) / Slider_Value_Frame.AbsoluteSize.X, 0, 1),
                        0,
                        0.5,
                        0
                    )
                local pos1 =
                    UDim2.new(
                        math.clamp((input.Position.X - Slider_Value_Frame.AbsolutePosition.X) / Slider_Value_Frame.AbsoluteSize.X, 0, 1),
                        0,
                        0,
                        6
                    )
                Slider_Value:TweenSize(pos1, "Out", "Sine", 0.1, true)
                Value_Button:TweenPosition(pos, "Out", "Sine", 0.1, true)
                local value_number = math.floor(((pos.X.Scale * max) / max) * (max - min) + min)
                Value_Slider.Text = tostring(value_number)
                callback(value_number)
            end
            local dragging = false
            Value_Button.InputBegan:Connect(
                function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        dragging = true
                    end
                end)
            Value_Button.InputEnded:Connect(
                function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        dragging = false
                    end
                end)
            Slider_Frame.InputBegan:Connect(
                function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        dragging = true
                    end
                end)
            Slider_Frame.InputEnded:Connect(
                function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        dragging = false
                    end
                end)
            Slider_Value_Frame.InputBegan:Connect(
                function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        dragging = true
                    end
                end)
            Slider_Value_Frame.InputEnded:Connect(
                function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        dragging = false
                    end
                end)
            game:GetService("UserInputService").InputChanged:Connect(function(input)
                if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                    move(input)
                end
            end)
            Value_Slider.FocusLost:Connect(function()
                if Value_Slider.Text == "" then
                    Value_Slider.Text  = value
                end
                if  tonumber(Value_Slider.Text) > max then
                    Value_Slider.Text  = max
                end
                if  tonumber(Value_Slider.Text) < min then
                    Value_Slider.Text  = min
                end
                Slider_Value:TweenSize(UDim2.new((Value_Slider.Text or 0) / max, 0, 0, 5), "Out", "Sine", 0.25, true)
                Value_Button:TweenPosition(UDim2.new((Value_Slider.Text or 0)/max, 0,0.6, 0) , "Out", "Sine", 0.25, true)
                Value_Slider.Text = tostring(Value_Slider.Text and math.floor( (Value_Slider.Text / max) * (max - min) + min) )
                pcall(callback, Value_Slider.Text)
            end)
            
            function Slider_System:Update(value1)
                Slider_Value:TweenSize(UDim2.new((value1 or 0) / max, 0, 0, 6), "Out", "Sine", 0.25, true)
                Value_Button:TweenPosition(UDim2.new((value1 or 0)/max, 0,0.6, 0) , "Out", "Sine", 0.25, true)
                Value_Slider.Text = value1
                pcall(function()
                    callback(value1)
                end)
            end
                return Slider_System
            end
        
-- RETURE ( Function UI )
    return System
end
    return Page
end
    return Tab
end
-------------------------

-- >> CREATE UI << --
local UI = Create:CreateUI()
local Tab1 = UI:CreateTab("14987797820","Off") -- TAB >> Icon Number , LineTab ( On , Off )
local Tab2 = UI:CreateTab("14979961937","Off") -- TAB >> Icon Number , LineTab ( On , Off )
local Tab3 = UI:CreateTab("14987817655","Off") -- TAB >> Icon Number , LineTab ( On , Off )
local Tab4 = UI:CreateTab("14979968259","On") -- TAB >> Icon Number , LineTab ( On , Off )
local Tab5 = UI:CreateTab("14987818881","Off") -- TAB >> Icon Number , LineTab ( On , Off )
local Page1 = Tab1:CreatePage("PAGE NAME","Left") -- Page >> Name ,  PageType ( Left , Right )
local Page2 = Tab1:CreatePage("PAGE NAME","Right") -- Page >> Name , PageType ( Left , Right )
-- >> SYSTEM UI << --

-- PAGE 1
Page1:TextLabel("TEXT LABEL","Center") -- Textlabel >> Text , TypeText ( Left , Center , Right )

Page1:Line() -- Line >> Line UI

Page1:Button("BUTTON",function() -- Button >> Text
    print("Test")
end)

Page1:Toggle("TOGGLE",false,function(Value) -- Toggle >> Text , System ( true , false )
    print(Value)
end)

Page1:Line() -- Line >> Line UI

local Slider = Page1:Slider("SLIDER",1,100,20,function(v) -- Slider >> Text , min , max , value , (  )
    print(v)
end)

Page1:Button("SLIDER - UPDATE",function() -- Button >> Text
    Slider:Update(20)
end)

-- PAGE 2

Page2:TextLabel("DROPDOWN","Left") -- Textlabel >> Text , TypeText ( Left , Center , Right )

local Dropdown = Page2:Dropdown("SELECT",{"1","2","3"},function(Value) -- Dropdown >> Text , { TableList }
    print(Value)
end)

Page2:Button("ADD",function() -- Button >> Text
    Dropdown:Add("4")
end)

Page2:Button("CLEAR",function() -- Button >> Text
    Dropdown:Clear()
end)

Page2:Line() -- Line >> Line UI

Page2:TextLabel("MULTI DROPDOWN","Left") -- Textlabel >> Text , TypeText ( Left , Center , Right )

local MultiDropdown = Page2:MultiDropdown("SELECT",{"1","2","3"},{"1","2"},function(v) -- MuiltDropdown >> Text , { TableList } , DefaultTable
	print(v)
end)

Page2:Button("ADD",function() -- Button >> Text
    MultiDropdown:Add("4")
end)

Page2:Button("CLEAR",function() -- Button >> Text
    MultiDropdown:Clear()
end)
